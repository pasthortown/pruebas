package com.corlasosa.kfc.despachador.formateado;

import com.corlasosa.kfc.despachador.ProcesaCupones;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.util.logging.Level;
import java.util.logging.Logger;

public class IntroPageDetalleCupon implements Printable {
  private String tabla = null;
  
  private String formato = "";
  
  private int tamanio;
  
  public String getFuente() {
    return this.formato;
  }
  
  public void setFuente(String formato) {
    this.formato = formato;
  }
  
  public int getTamanio() {
    return this.tamanio;
  }
  
  public void setTamanio(int tamanio) {
    this.tamanio = tamanio;
  }
  
  public String getTabla() {
    return this.tabla;
  }
  
  public void setTabla(String tabla) {
    this.tabla = tabla;
  }
  
  public int ValidaTitulos(String psCadena) {
    int valor = 0;
    String lsCadena = "Cupon,CANT,DESCRIPCION,Usuario,Fecha";
    String[] arreglo = lsCadena.split(",");
    for (int i = 0; i < arreglo.length; i++) {
      if (psCadena.indexOf(arreglo[i]) >= 0)
        valor = 1; 
    } 
    return valor;
  }
  
  public void drawCenteredString(String s, int w, int h, Graphics g, int py) {
    FontMetrics fm = g.getFontMetrics();
    int x = (w - fm.stringWidth(s)) / 2;
    g.drawString(s, x, py);
  }
  
  public void drawStringDerA(Graphics g, String line, int wc, int lineW, int y, int valor) {
    g.drawString(line, valor - lineW, y);
  }
  
  public int print(Graphics g, PageFormat pageFormat, int page) {
    try {
      Graphics2D g2d = (Graphics2D)g;
      g2d.translate(pageFormat.getImageableX(), pageFormat.getImageableY());
      int lInicio = 0;
      int lFin = 0;
      String lLinea = null;
      String lLineaAux = null;
      int x = 0;
      int y = 0;
      String ptabla = this.tabla;
      x = 20;
      y = 10;
      int i = 0;
      do {
        if (i < 1) {
          lInicio = ptabla.indexOf("<");
          lFin = ptabla.indexOf(">");
          lLinea = ptabla.substring(lInicio + 1, lFin);
          String cadenaImp = ptabla.substring(lInicio + 1, lFin);
          String linea1 = cadenaImp;
          Font linea1Font = new Font(this.formato, 1, this.tamanio);
          lLineaAux = ptabla.substring(ptabla.indexOf(">") + 1, ptabla.length());
          g2d.setFont(linea1Font);
          g2d.getFontMetrics(linea1Font);
          if (i <= 2) {
            Font fuenteTitulo = new Font(this.formato, 1, this.tamanio);
            g2d.setFont(fuenteTitulo);
          } 
          drawCenteredString(linea1, Integer.parseInt("200"), Integer.parseInt("100"), g2d, y);
        } else {
          lInicio = lLineaAux.indexOf("<");
          lFin = lLineaAux.indexOf(">");
          lLinea = String.valueOf(lLinea) + lLineaAux.substring(lInicio + 1, lFin);
          String cadenaImp = lLineaAux.substring(lInicio + 1, lFin);
          String linea2 = cadenaImp;
          Font linea2Font = new Font(this.formato, 2, this.tamanio);
          lLineaAux = lLineaAux.substring(lLineaAux.indexOf(">") + 1, lLineaAux.length());
          g2d.setFont(linea2Font);
          g2d.getFontMetrics(linea2Font);
          if (linea2.indexOf("SgmenA") >= 0) {
            String[] arreglo = linea2.split("SgmenA");
            if (ValidaTitulos(arreglo[0]) == 1) {
              Font fuenteTitulo1 = new Font(this.formato, 1, this.tamanio);
              g2d.setFont(fuenteTitulo1);
              g2d.drawString(arreglo[0], 20, y);
              g2d.drawString(arreglo[1], 60, y);
            } else {
              g2d.drawString(arreglo[0], 20, y);
              g2d.drawString(arreglo[1], 60, y);
            } 
          } else if (linea2.indexOf("SgmenB") >= 0) {
            String[] arreglo = linea2.split("SgmenB");
            Font fuenteTitulo1 = new Font(this.formato, 1, this.tamanio);
            g2d.setFont(fuenteTitulo1);
            g2d.drawString(arreglo[0], 20, y);
            Font fuenteTitulo2 = new Font(this.formato, 2, this.tamanio);
            g2d.setFont(fuenteTitulo2);
            g2d.drawString(arreglo[1], 60, y);
          } else if (ValidaTitulos(linea2) == 1) {
            Font fuenteTitulo = new Font(this.formato, 1, this.tamanio);
            g2d.setFont(fuenteTitulo);
            if (i == 2) {
              drawCenteredString(linea2.trim(), Integer.parseInt("200"), Integer.parseInt("100"), g2d, y);
            } else {
              g2d.drawString(linea2, x, y);
            } 
          } else {
            g2d.drawString(linea2, x, y);
          } 
        } 
        y += 9;
        i++;
      } while (lLineaAux.indexOf(">") > 0);
    } catch (Exception ex) {
      Logger.getLogger(ProcesaCupones.class.getName()).log(Level.SEVERE, (String)null, ex);
    } 
    return 0;
  }
}
